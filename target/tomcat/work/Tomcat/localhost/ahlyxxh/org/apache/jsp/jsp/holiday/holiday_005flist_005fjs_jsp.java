/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2019-10-31 03:30:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.holiday;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class holiday_005flist_005fjs_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("//解决IE8不支持trim方法\r\n");
      out.write("\tFunction.prototype.method = function(name, func) {\r\n");
      out.write("\t  this.prototype[name] = func;\r\n");
      out.write("\t  return this;\r\n");
      out.write("\t};\r\n");
      out.write("\tif(!String.prototype.trim){ //判断下浏览器是否自带有trim()方法\r\n");
      out.write("\tString.method('trim', function() {\r\n");
      out.write("\treturn this.replace(/^\\s+|\\s+$/g, '');\r\n");
      out.write("\t});\r\n");
      out.write("\tString.method('ltrim', function() {\r\n");
      out.write("\treturn this.replace(/^\\s+/g, '');\r\n");
      out.write("\t});\r\n");
      out.write("\tString.method('rtrim', function() {\r\n");
      out.write("\treturn this.replace(/\\s+$/g, '');\r\n");
      out.write("\t});\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\tvar queryFormCach=null;\r\n");
      out.write("\tvar treeSelectCach=null;\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tinitHolidayList();\r\n");
      out.write("\r\n");
      out.write("\t\t//创建列表\r\n");
      out.write("    $(\"#HolidayList\").datagrid({\r\n");
      out.write("\t\t\ttitle:'节假日管理',\r\n");
      out.write("\t\t\tidField:'id',\r\n");
      out.write("\t\t\tsingleSelect : false,\r\n");
      out.write("            pagination : true,\r\n");
      out.write("            height : getViewportHeight()-60,\r\n");
      out.write("            fitColumns : true,\r\n");
      out.write("\t\t\tfrozenColumns:[[\r\n");
      out.write("\t\t\t                {field:'ck',checkbox:true}\r\n");
      out.write("\t\t\t\t\t\t]],\r\n");
      out.write("\t\t\tcolumns:[[\r\n");
      out.write("\t{field:'holidayName',title:'假日名称',width:130},\t\r\n");
      out.write("\t{field:'firstDay',title:'开始日期',width:130,formatter: function(value,row){return  value.substr(0,10);}},\r\n");
      out.write("\t{field:'lastDay',title:'结束日期',width:130,formatter: function(value,row){return  value.substr(0,10);}},\r\n");
      out.write("\t{field:'holidayDays',title:'假期天数',width:130},\r\n");
      out.write("\t{field:'beloneYear',title:'年份',width:130},\r\n");
      out.write("\t{field:'codeGenerator',title:'codeGenerator',width:0,hidden:true}\r\n");
      out.write("\t\t\t]],\r\n");
      out.write("\t\t\ttoolbar:[{\r\n");
      out.write("\t\t\t\ttext:'添加',\r\n");
      out.write("\t\t\t\ticonCls:'icon-add',\r\n");
      out.write("\t\t\t\thandler:HolidayAdd\r\n");
      out.write("\t\t\t},{\r\n");
      out.write("\t\t\t\ttext:'修改',\r\n");
      out.write("\t\t\t\ticonCls:'icon-edit',\r\n");
      out.write("\t\t\t\thandler:HolidayEdit\r\n");
      out.write("\t\t\t},{\r\n");
      out.write("\t\t\t\ttext:'删除',\r\n");
      out.write("\t\t\t\ticonCls:'icon-remove',\r\n");
      out.write("\t\t\t\thandler:HolidayDel\r\n");
      out.write("\t\t\t}],\r\n");
      out.write("\t\t\tonDblClickRow:HolidayEdit\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t//创建编辑对话框\r\n");
      out.write("\t\t$('#HolidayDialog').dialog({\r\n");
      out.write("\t\t\ttitle:'新增节假日',\r\n");
      out.write("\t\t\tmodal:true,\r\n");
      out.write("\t\t\tbuttons:[{\r\n");
      out.write("\t\t\t\ttext:'确定',\r\n");
      out.write("\t\t\t\ticonCls:'icon-ok',\r\n");
      out.write("\t\t\t\thandler:function(){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},{\r\n");
      out.write("\t\t\t\ttext:'取消',\r\n");
      out.write("\t\t\t\thandler:function(){\r\n");
      out.write("\t\t\t\t\t$('#HolidayDialog').dialog('close');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}],\r\n");
      out.write("\t\t\tclosed:true\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t//初始化表单元素\r\n");
      out.write("\t\tinitForm();\r\n");
      out.write("\t\t\r\n");
      out.write("\t});//结束初始化函数\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tfunction initHolidayList(){\r\n");
      out.write("\t\tvar cityids = $(\"#HolidayQueryForm\\\\:holidayName\");\r\n");
      out.write("\t\t//var Obj=new Object();\r\n");
      out.write("\t\tdwr.engine.setAsync(false);\r\n");
      out.write("\t\tHolidayAction.getAll(function(data){\r\n");
      out.write("\t\t\tif(null==data || null==data.returnList)return;\r\n");
      out.write("\t\t\tcityids.prepend(\"<option value=''>请选择</option>\");\r\n");
      out.write("\t\t\tfor (var i=0;i<data.returnList.length;i++) {\r\n");
      out.write("\t\t\tcityids.append(\"<option value='\"+ data.returnList[i]['holidayName']+\"'>\"+ data.returnList[i]['holidayName'] +\"</option>\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tdwr.engine.setAsync(true);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("//--------------------初始化和公用方法 start ------------------------\r\n");
      out.write("\tfunction initForm(){\r\n");
      out.write("\t\t$(\"#btn_query\").click(query);\r\n");
      out.write("\t\t$(\"#btn_reset\").click(reset);\r\n");
      out.write("\t\tquery();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//查询\r\n");
      out.write("\tfunction query(){\r\n");
      out.write("\t\t$('#HolidayList').datagrid('unselectAll');\r\n");
      out.write("\t\tvar queryObj = {\r\n");
      out.write("\tid:$(\"#HolidayQueryForm\\\\:id\").val(),\r\n");
      out.write("\tholidayName:$(\"#HolidayQueryForm\\\\:holidayName\").val(),//combobox('getValue')\r\n");
      out.write("\tbeloneYear:$(\"#HolidayQueryForm\\\\:beloneYear\").val(),\r\n");
      out.write("\t\r\n");
      out.write("    codeGenerator:'codeGenerator'\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\t\ttreeSelectCach=null;\r\n");
      out.write("\t\tqueryFormCach=queryObj;\r\n");
      out.write("\t\treLoadGridData(queryObj);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction reset(){\r\n");
      out.write("\t\t$(\"#HolidayQueryForm\\\\:id\").val('');\r\n");
      out.write("\t\t$(\"#HolidayQueryForm\\\\:holidayName\").val('');//combobox('setValue','')\r\n");
      out.write("\t\t$(\"#HolidayQueryForm\\\\:beloneYear\").val('');\r\n");
      out.write("\t\t//reLoadGridData(null);\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//加载表格数据\r\n");
      out.write("\tfunction loadData(data){\r\n");
      out.write("\t\t$('#HolidayList').datagrid('unselectAll');\r\n");
      out.write("\t\tif(data!=null && data.length>0){\r\n");
      out.write("\t\t\t$('#HolidayList').datagrid({loadFilter:pagerFilter}).datagrid('loadData', {total:data.length,rows:data}).datagrid('getPager').pagination('select',1);\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$('#HolidayList').datagrid({loadFilter:pagerFilter}).datagrid('loadData',{total:0,rows:[]});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("    function getFormObj(){\r\n");
      out.write("\t\t//var obj = $(\"#HolidayForm\").getJSON().HolidayForm;\r\n");
      out.write("\t\t var obj={\r\n");
      out.write("\t\t\t id:$(\"#HolidayForm\\\\:id\").val(),\t\t\r\n");
      out.write("\t\t\t holidayName: $(\"#HolidayForm\\\\:holidayName\").combobox('getValue'),//combobox('getValue')\r\n");
      out.write("\t\t\t firstDay:$(\"#HolidayForm\\\\:firstDay\").val(),\r\n");
      out.write("\t\t\t lastDay:$(\"#HolidayForm\\\\:lastDay\").val(),\r\n");
      out.write("\t\t\t holidayDays:$(\"#HolidayForm\\\\:holidayDays\").val()\r\n");
      out.write("\t        }\r\n");
      out.write("\t\t//alert(JSON.stringify(obj));\r\n");
      out.write("\t\treturn obj;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction reLoadGridData(queryObj){\r\n");
      out.write("\t\tHolidayAction.getHolidayList(queryObj,function(result){\r\n");
      out.write("\t\t\t\tif(result.resultCode==\"0\"){\r\n");
      out.write("\t\t\t\t\tloadData(result.returnList);\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\tshowMsg(\"加载节假日表列表数据时出错，可能原因为：\\n\"+result.resultMessage);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("//--------------------初始化和公用方法 start ------------------------\r\n");
      out.write("//--------------------界面操作 start ------------------------\r\n");
      out.write("\t\r\n");
      out.write("\tfunction HolidayAdd(){\r\n");
      out.write("\t\t$('#HolidayForm').clear();\r\n");
      out.write("\r\n");
      out.write("\t\t$('#HolidayDialog').dialog({\r\n");
      out.write("\t\t\ttitle:'新增节假日',\r\n");
      out.write("\t\t\tmodal:true,\r\n");
      out.write("\t\t\tbuttons:[{\r\n");
      out.write("\t\t\t\ttext:'确定',\r\n");
      out.write("\t\t\t\ticonCls:'icon-ok',\r\n");
      out.write("\t\t\t\thandler:HolidayCreate\r\n");
      out.write("\t\t\t},{\r\n");
      out.write("\t\t\t\ttext:'取消',\r\n");
      out.write("\t\t\t\ticonCls:'icon-cancel',\r\n");
      out.write("\t\t\t\thandler:function(){\r\n");
      out.write("\t\t\t\t\t$('#HolidayDialog').dialog('close');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}],\r\n");
      out.write("\t\t\tclosed:false\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction HolidayCreate(){\r\n");
      out.write("\t var obj={\r\n");
      out.write("\t\t\t id:$(\"#HolidayForm\\\\:id\").val(),\t\t\r\n");
      out.write("\t\t\t holidayName: $(\"#HolidayForm\\\\:holidayName\").combobox('getValue'),//combobox('getValue')\r\n");
      out.write("\t\t\t firstDay:$(\"#HolidayForm\\\\:firstDay\").val(),\r\n");
      out.write("\t\t\t lastDay:$(\"#HolidayForm\\\\:lastDay\").val(),\r\n");
      out.write("\t\t\t holidayDays:$(\"#HolidayForm\\\\:holidayDays\").val()\r\n");
      out.write("\t        }\r\n");
      out.write("\t    var re = /^[\\u4e00-\\u9fa5a-z]+$/gi;\r\n");
      out.write("\t   if(!re.test($(\"#HolidayForm\\\\:holidayName\").combobox('getValue'))){\r\n");
      out.write("\t\t   showMsg(\"假期名称不能包含特殊字符!\");\r\n");
      out.write("\t\t   return;\r\n");
      out.write("\t   }\r\n");
      out.write("\t    if( $(\"#HolidayForm\\\\:holidayName\").combobox('getValue').length>6){\r\n");
      out.write("\t    \t showMsg(\"假期名称不能超过6个汉字!\");\r\n");
      out.write("\t\t\t return;\r\n");
      out.write("\t    }\r\n");
      out.write("\t    if(isNaN($(\"#HolidayForm\\\\:holidayDays\").val())||$(\"#HolidayForm\\\\:holidayDays\").val().length<=0){\r\n");
      out.write("\t    \tshowMsg(\"假期天数必须是数字!\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(!jQuery.form(\"#HolidayForm\").validate())return;\r\n");
      out.write("\t\tHolidayAction.getHolidayListByName(obj,function(result){\r\n");
      out.write("\t\t\tif(result.returnList!=null&&result.returnList.length>0){\r\n");
      out.write("\t\t\t\tshowMsg(\"你添加的假日已存在！\");\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tHolidayAction.createHoliday(obj,function(result){\r\n");
      out.write("\t\t\t\t\tif(result.resultCode==\"0\"){\r\n");
      out.write("\t\t\t\t\t\tquery();\r\n");
      out.write("\t\t\t\t\t\t$('#HolidayDialog').dialog('close');\r\n");
      out.write("\t\t\t\t\t\tparent.$.messager.show({\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle : '成功',\r\n");
      out.write("\t\t\t\t\t\t\t\tmsg : '创建成功',\r\n");
      out.write("\t\t\t\t\t\t\t\ttimeout : 1000 * 2\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\tshowMsg(\"创建节假日时出错，可能原因为：\\n\"+result.resultMessage);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction HolidayEdit(index,rowData){\r\n");
      out.write("\t\tvar rows = new Array();\r\n");
      out.write("\t\tif(null!=rowData){\r\n");
      out.write("\t\t\trows.push(rowData);\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\trows=$('#HolidayList').datagrid('getSelections');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (rows.length<=0) {\r\n");
      out.write("\t\t\tshowMsg(\"请先选择需要修改的节假日!\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (rows.length>1) {\r\n");
      out.write("\t\t\tshowMsg(\"不能同时修改多个节假日!\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//初始化数据\r\n");
      out.write("\t\t//$(\"#HolidayForm\").setJSON({HolidayForm:rows[0]});\r\n");
      out.write("\t\t$(\"#HolidayForm\\\\:id\").val(rows[0].id);\r\n");
      out.write("\t\t$(\"#HolidayForm\\\\:holidayName\").combobox('setValue',rows[0].holidayName);\r\n");
      out.write("\t\t$(\"#HolidayForm\\\\:firstDay\").val(rows[0].firstDay.substr(0,10));\r\n");
      out.write("\t\t$(\"#HolidayForm\\\\:lastDay\").val(rows[0].lastDay.substr(0,10));\r\n");
      out.write("\t\t$(\"#HolidayForm\\\\:holidayDays\").val(rows[0].holidayDays);\r\n");
      out.write("\t    $('#HolidayDialog').dialog({\r\n");
      out.write("\t\t\ttitle:'修改节假日',\r\n");
      out.write("\t\t\tmodal:true,\r\n");
      out.write("\t\t\tbuttons:[{\r\n");
      out.write("\t\t\t\ttext:'确定',\r\n");
      out.write("\t\t\t\ticonCls:'icon-ok',\r\n");
      out.write("\t\t\t\thandler:HolidayUpdate\r\n");
      out.write("\t\t\t},{\r\n");
      out.write("\t\t\t\ttext:'取消',\r\n");
      out.write("\t\t\t\ticonCls:'icon-cancel',\r\n");
      out.write("\t\t\t\thandler:function(){\r\n");
      out.write("\t\t\t\t\t$('#HolidayDialog').dialog('close');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}],\r\n");
      out.write("\t\t\tclosed:false\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction HolidayUpdate(){\r\n");
      out.write("\t\tvar obj=getFormObj();\r\n");
      out.write("\t\tif(!jQuery.form(\"#HolidayForm\").validate())return;\r\n");
      out.write("\t\tHolidayAction.updateHoliday(obj,function(result){\r\n");
      out.write("\t\t\tif(result.resultCode==\"0\"){\r\n");
      out.write("\t\t\t\t$('#HolidayDialog').dialog('close');\r\n");
      out.write("\t\t\t\tparent.$.messager.show({\r\n");
      out.write("\t\t\t\t\ttitle : '成功',\r\n");
      out.write("\t\t\t\t\tmsg : '修改成功',\r\n");
      out.write("\t\t\t\t\ttimeout : 1000 * 2\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tvar queryObj=treeSelectCach==null?queryFormCach:treeSelectCach;\r\n");
      out.write("\t\t\t\treLoadGridData(queryObj);\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tshowMsg(\"更新节假日时出错，可能原因为：\\n\"+result.resultMessage);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction HolidayDel(){\r\n");
      out.write("\t\tvar rows = $('#HolidayList').datagrid('getSelections');\r\n");
      out.write("\t\tif (rows.length<=0) {\r\n");
      out.write("\t\t\tshowMsg(\"请先选择需要删除的节假日!\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tconfirmMsg('确认需要删除这些节假日吗?', function(isdel){\r\n");
      out.write("\t\t\tif(isdel){\r\n");
      out.write("\t\t\t\tvar objs=new Array();\r\n");
      out.write("\t\t\t\tfor(var i=0;i<rows.length;i++){\r\n");
      out.write("\t\t\t\t\tobjs.push({id:rows[i].id});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tHolidayAction.batchDeleteHoliday(objs,function(result){\r\n");
      out.write("\t\t\t\t\tif(result.resultCode==\"0\"){\r\n");
      out.write("\t\t\t\t\t\tparent.$.messager.show({\r\n");
      out.write("\t\t\t\t\t\t\ttitle : '成功',\r\n");
      out.write("\t\t\t\t\t\t\tmsg : '删除成功',\r\n");
      out.write("\t\t\t\t\t\t\ttimeout : 1000 * 2\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\tvar queryObj=treeSelectCach==null?queryFormCach:treeSelectCach;\r\n");
      out.write("\t\t\t\t\t\treLoadGridData(queryObj);\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\tshowMsg(\"删除节假日时出错，可能原因为：\\n\"+result.resultMessage);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  function getHolidayNum(){\r\n");
      out.write("\t  \r\n");
      out.write("\tvar firstDay=$(\"#HolidayForm\\\\:firstDay\").val();\r\n");
      out.write("\tvar\tlastDay=$(\"#HolidayForm\\\\:lastDay\").val();\r\n");
      out.write("\t\r\n");
      out.write("\tvar holidayNum=DateDiff(firstDay,lastDay);\r\n");
      out.write("\t\r\n");
      out.write("\t$('#HolidayForm\\\\:holidayDays').numberbox('setValue', holidayNum);\r\n");
      out.write("\t\r\n");
      out.write("\t} \r\n");
      out.write("  \r\n");
      out.write("  function DateDiff(sDate1, sDate2) {  //sDate1和sDate2是yyyy-MM-dd格式\r\n");
      out.write("\r\n");
      out.write("\t    //var aDate, oDate1, oDate2, iDays;\r\n");
      out.write("\t    aDate = sDate1.split(\"-\");\r\n");
      out.write("\t    oDate1 = new Date(aDate[1] + '-' + aDate[2] + '-' + aDate[0]);  //转换为yyyy-MM-dd格式\r\n");
      out.write("\t   \r\n");
      out.write("\t    aDate = sDate2.split(\"-\");\r\n");
      out.write("\t    oDate2 = new Date(aDate[1] + '-' + aDate[2] + '-' + aDate[0]);\r\n");
      out.write("\t    \r\n");
      out.write("\t    iDays = parseInt(Math.abs(oDate1 - oDate2) / 1000 / 60 / 60 / 24)+1; //把相差的毫秒数转换为天数 \r\n");
      out.write("\t   /*  var sDate=new Date(sDate1);\r\n");
      out.write("\t    alert(sDate+\"开始时间：\"+sDate.getTime());\r\n");
      out.write("\t    var eDate=new Date(sDate2);\r\n");
      out.write("\t    alert(sDate+\"开始时间：\"+sDate.getTime());\r\n");
      out.write("\t    var iDays =parseInt(Math.abs((eDate.getTime()-sDate.getTime()) / 1000 / 60 / 60 / 24))+1; */\r\n");
      out.write("\t    return iDays;  //返回相差天数\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("//--------------------界面操作 end ------------------------\r\n");
      out.write("\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

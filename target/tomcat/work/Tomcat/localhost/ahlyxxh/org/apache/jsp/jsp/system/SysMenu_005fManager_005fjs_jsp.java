/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2019-10-31 02:58:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.system;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class SysMenu_005fManager_005fjs_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar queryFormCach=null;\r\n");
      out.write("\tvar treeSelectCach=null;\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t//创建左边树形\r\n");
      out.write("\t\t$('#type_tree').tree({\r\n");
      out.write("\t\t\tanimate:true,\r\n");
      out.write("\t\t\tonClick:function(node){\r\n");
      out.write("\t\t\t\t$('#SysMenuList').datagrid('unselectAll');\r\n");
      out.write("\t\t\t\tvar queryObj={\r\n");
      out.write("\t\t\t\t\t\t\tstatus:$(\"#SysMenuQueryForm\\\\:status\").val(),\r\n");
      out.write("\t\t\t\t\t\t\tpunid:node.id\r\n");
      out.write("\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\ttreeSelectCach=queryObj;\r\n");
      out.write("\t\t\t\tqueryFormCach=null;\r\n");
      out.write("\t\t\t\treLoadGridData(queryObj);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//创建列表\r\n");
      out.write("\t\t$(\"#SysMenuList\").datagrid({\r\n");
      out.write("\t\t\ttitle:'菜单管理',\r\n");
      out.write("\t\t\tidField:'unid',\r\n");
      out.write("\t\t\tsingleSelect: false,\r\n");
      out.write("\t\t\tpagination: true,\r\n");
      out.write("\t\t\theight:getViewportHeight()-52,\r\n");
      out.write("\t\t\t//width:'auto',\r\n");
      out.write("\t\t\t//fit:true,\r\n");
      out.write("\t\t\tfitColumns: true,\r\n");
      out.write("\t\t\tcollapsible:true,\r\n");
      out.write("\t\t\tfrozenColumns:[[\r\n");
      out.write("\t\t\t                {field:'ck',checkbox:true}\r\n");
      out.write("\t\t\t\t\t\t]],\r\n");
      out.write("\t\t\tcolumns:[[\r\n");
      out.write("\t\t\t\t{field:'menuid',title:'菜单标识',width:100},\r\n");
      out.write("\t\t\t\t{field:'name',title:'名称',width:100},\r\n");
      out.write("\t\t\t\t{field:'displayName',title:'显示名称',width:100},\r\n");
      out.write("\t\t\t\t{field:'url',title:'地址',width:100},\r\n");
      out.write("\t\t\t\t{field:'sortNum',title:'排序号',width:100},\r\n");
      out.write("\t\t\t\t{field:'status',title:'状态',width:100,formatter:function(val){\r\n");
      out.write("\t\t\t\t\treturn val==0?'启用':'禁用';\r\n");
      out.write("\t\t\t\t}}\r\n");
      out.write("\t\t\t]],\r\n");
      out.write("\t\t\ttoolbar:[{\r\n");
      out.write("\t\t\t\ttext:'添加',\r\n");
      out.write("\t\t\t\ticonCls:'icon-add',\r\n");
      out.write("\t\t\t\thandler:SysMenuAdd\r\n");
      out.write("\t\t\t},{\r\n");
      out.write("\t\t\t\ttext:'修改',\r\n");
      out.write("\t\t\t\ticonCls:'icon-edit',\r\n");
      out.write("\t\t\t\thandler:SysMenuEdit\r\n");
      out.write("\t\t\t},{\r\n");
      out.write("\t\t\t\ttext:'删除',\r\n");
      out.write("\t\t\t\ticonCls:'icon-remove',\r\n");
      out.write("\t\t\t\thandler:SysMenuDel\r\n");
      out.write("\t\t\t},{\r\n");
      out.write("\t\t\t\ttext:'复制',\r\n");
      out.write("\t\t\t\ticonCls:'exicon-page_copy',\r\n");
      out.write("\t\t\t\thandler:SysMenuCopy\r\n");
      out.write("\t\t\t}],\r\n");
      out.write("\t\t\tonDblClickRow: function(rowIndex, rowData){\r\n");
      out.write("\t\t\t\t//初始化数据\r\n");
      out.write("\t\t\t\t$(\"#SysMenuForm\").setJSON({SysMenuForm:rowData});\r\n");
      out.write("\t\t\t\tvar snode = $('#type_tree').tree('getSelected');\r\n");
      out.write("\t\t\t\t$('#SysMenuForm\\\\:punid').combotree('setValue',snode==null?'':snode.id);\r\n");
      out.write("\t\t\t\t$('#SysMenuDialog').dialog({\r\n");
      out.write("\t\t\t\t\ttitle:'修改菜单',\r\n");
      out.write("\t\t\t\t\tmodal:true,\r\n");
      out.write("\t\t\t\t\tbuttons:[{\r\n");
      out.write("\t\t\t\t\t\ttext:'确定',\r\n");
      out.write("\t\t\t\t\t\ticonCls:'icon-ok',\r\n");
      out.write("\t\t\t\t\t\thandler:SysMenuUpdate\r\n");
      out.write("\t\t\t\t\t},{\r\n");
      out.write("\t\t\t\t\t\ttext:'取消',\r\n");
      out.write("\t\t\t\t\t\thandler:function(){\r\n");
      out.write("\t\t\t\t\t\t\t$('#SysMenuDialog').dialog('close');\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}],\r\n");
      out.write("\t\t\t\t\tclosed:false\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t//创建编辑对话框\r\n");
      out.write("\t\t$('#SysMenuDialog').dialog({\r\n");
      out.write("\t\t\ttitle:'新增菜单',\r\n");
      out.write("\t\t\tmodal:true,\r\n");
      out.write("\t\t\tbuttons:[{\r\n");
      out.write("\t\t\t\ttext:'确定',\r\n");
      out.write("\t\t\t\ticonCls:'icon-ok',\r\n");
      out.write("\t\t\t\thandler:function(){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},{\r\n");
      out.write("\t\t\t\ttext:'取消',\r\n");
      out.write("\t\t\t\thandler:function(){\r\n");
      out.write("\t\t\t\t\t$('#SysMenuDialog').dialog('close');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}],\r\n");
      out.write("\t\t\tclosed:true\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t//初始化表单元素\r\n");
      out.write("\t\tinitForm();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//初始化树形\r\n");
      out.write("\t\tinitTypeTree();\r\n");
      out.write("\t});//结束初始化函数\r\n");
      out.write("\r\n");
      out.write("//--------------------初始化和公用方法 start ------------------------\r\n");
      out.write("\tfunction initForm(){\r\n");
      out.write("\t\t$(\"#btn_query\").click(query);\r\n");
      out.write("\t\t$(\"#btn_reset\").click(reset);\r\n");
      out.write("\t\tquery();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//查询\r\n");
      out.write("\tfunction query(){\r\n");
      out.write("\t\t$('#SysMenuList').datagrid('unselectAll');\r\n");
      out.write("\t\tvar queryObj = {\r\n");
      out.write("\t\t\tunid:$(\"#SysMenuQueryForm\\\\:unid\").val(),\r\n");
      out.write("\t\t\tmenuid:$(\"#SysMenuQueryForm\\\\:menuid\").val(),\r\n");
      out.write("\t\t\tname:$(\"#SysMenuQueryForm\\\\:name\").val(),\r\n");
      out.write("\t\t\turl:$(\"#SysMenuQueryForm\\\\:url\").val(),\r\n");
      out.write("\t\t\tmenuIcon:$(\"#SysMenuQueryForm\\\\:menuIcon\").val(),\r\n");
      out.write("\t\t\tdesktopIcon:$(\"#SysMenuQueryForm\\\\:desktopIcon\").val(),\r\n");
      out.write("\t\t\tsortNum:$(\"#SysMenuQueryForm\\\\:sortNum\").val(),\r\n");
      out.write("\t\t\tstatus:$(\"#SysMenuQueryForm\\\\:status\").val(),\r\n");
      out.write("\t\t\t\tcodeGenerator:'codeGenerator'\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\t\ttreeSelectCach=null;\r\n");
      out.write("\t\tqueryFormCach=queryObj;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\treLoadGridData(queryObj);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction reset(){\r\n");
      out.write("\t\t$(\"#SysMenuQueryForm\\\\:unid\").val('');\r\n");
      out.write("\t\t$(\"#SysMenuQueryForm\\\\:menuid\").val('');\r\n");
      out.write("\t\t$(\"#SysMenuQueryForm\\\\:name\").val('');\r\n");
      out.write("\t\t$(\"#SysMenuQueryForm\\\\:url\").val('');\r\n");
      out.write("\t\t$(\"#SysMenuQueryForm\\\\:menuIcon\").val('');\r\n");
      out.write("\t\t$(\"#SysMenuQueryForm\\\\:desktopIcon\").val('');\r\n");
      out.write("\t\t$(\"#SysMenuQueryForm\\\\:sortNum\").val('');\r\n");
      out.write("\t\t$(\"#SysMenuQueryForm\\\\:status\").val('');\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//加载表格数据\r\n");
      out.write("\tfunction loadData(data){\r\n");
      out.write("\t\t$('#SysMenuList').datagrid('unselectAll');\r\n");
      out.write("\t\tif(data!=null && data.length>0){\r\n");
      out.write("\t\t\t$('#SysMenuList').datagrid({loadFilter:pagerFilter}).datagrid('loadData', {total:data.length,rows:data}).datagrid('getPager').pagination('select',1);\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$('#SysMenuList').datagrid({loadFilter:pagerFilter}).datagrid('loadData',{total:0,rows:[]});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\tfunction getFormObj(){\r\n");
      out.write("\t\tvar obj = $(\"#SysMenuForm\").getJSON().SysMenuForm;\r\n");
      out.write("\t\tvar selectNode=$('#SysMenuForm\\\\:punid').combotree('tree').tree('getSelected');\r\n");
      out.write("\t\tif(null!=selectNode){\r\n");
      out.write("\t\t\tobj.punid=selectNode.id;\r\n");
      out.write("\t\t\tobj.typeName=selectNode.text;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\treturn obj;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction reLoadGridData(queryObj){\r\n");
      out.write("\t\tSysMenuAction.getSysMenuList(queryObj,function(result){\r\n");
      out.write("\t\t\t\tif(result.resultCode==\"0\"){\r\n");
      out.write("\t\t\t\t\tloadData(result.returnList);\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\tshowMsg(\"加载菜单列表数据时出错，可能原因为：\\n\"+result.resultMessage);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("//--------------------初始化和公用方法 start ------------------------\r\n");
      out.write("//--------------------界面操作 start ------------------------\r\n");
      out.write("\t\r\n");
      out.write("\tfunction SysMenuAdd(){\r\n");
      out.write("\t\tvar snode = $('#type_tree').tree('getSelected');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#SysMenuForm\\\\:punid').combotree('setValue',snode==null?'':snode.id);\r\n");
      out.write("\t\t$('#SysMenuForm').clear();\r\n");
      out.write("\r\n");
      out.write("\t\t$('#SysMenuDialog').dialog({\r\n");
      out.write("\t\t\ttitle:'新增菜单',\r\n");
      out.write("\t\t\tmodal:true,\r\n");
      out.write("\t\t\tbuttons:[{\r\n");
      out.write("\t\t\t\ttext:'确定',\r\n");
      out.write("\t\t\t\ticonCls:'icon-ok',\r\n");
      out.write("\t\t\t\thandler:SysMenuCreate\r\n");
      out.write("\t\t\t},{\r\n");
      out.write("\t\t\t\ttext:'取消',\r\n");
      out.write("\t\t\t\thandler:function(){\r\n");
      out.write("\t\t\t\t\t$('#SysMenuDialog').dialog('close');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}],\r\n");
      out.write("\t\t\tclosed:false\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction SysMenuCreate(){\r\n");
      out.write("\t\tvar obj=getFormObj();\r\n");
      out.write("\t\tif(!jQuery.form(\"#SysMenuForm\").validate())return;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t var reges=/[`~!@#$%\\^\\&\\*\\(\\)_\\+“”《》！@#￥%<>\\?:\"\\{\\},\\.\\\\\\/;'\\[\\]]/im; \r\n");
      out.write("\t\t \r\n");
      out.write("        \r\n");
      out.write("        if(reges.test(obj.name)) {\r\n");
      out.write("            showMsg(\"名称不能包含非法字符！\");\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("\t\tif(reges.test(obj.displayName)) {\r\n");
      out.write("            showMsg(\"显示名称不能包含非法字符！\");\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tSysMenuAction.createSysMenu(obj,function(result){\r\n");
      out.write("\t\t\tif(result.resultCode==\"0\"){\r\n");
      out.write("\t\t\t\t$('#SysMenuDialog').dialog('close');\r\n");
      out.write("\t\t\t\tvar queryObj=treeSelectCach==null?queryFormCach:treeSelectCach;\r\n");
      out.write("\t\t\t\tinitTypeTree(obj.punid);\r\n");
      out.write("\t\t\t\treLoadGridData(queryObj);\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tshowMsg(\"创建菜单时出错，可能原因为：\\n\"+result.resultMessage);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction SysMenuCopy(){\r\n");
      out.write("\t\tvar rows = $('#SysMenuList').datagrid('getSelections');\r\n");
      out.write("\t\tif (rows.length<=0) {\r\n");
      out.write("\t\t\tshowMsg(\"请先选择需要复制的菜单!\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (rows.length>1) {\r\n");
      out.write("\t\t\tshowMsg(\"不能同时复制多个菜单!\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tSysMenuAction.copySysMenu(rows[0],function(result){\r\n");
      out.write("\t\t\tif(result.resultCode==\"0\"){\r\n");
      out.write("\t\t\t\t$('#SysMenuList').datagrid('appendRow',result.returnObject);\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tshowMsg(\"复制菜单时出错，可能原因为：\\n\"+result.resultMessage);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction SysMenuEdit(){\r\n");
      out.write("\t\tvar rows = $('#SysMenuList').datagrid('getSelections');\r\n");
      out.write("\t\tif (rows.length<=0) {\r\n");
      out.write("\t\t\tshowMsg(\"请先选择需要修改的菜单!\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (rows.length>1) {\r\n");
      out.write("\t\t\tshowMsg(\"不能同时修改多个菜单!\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//初始化数据\r\n");
      out.write("\t\t$(\"#SysMenuForm\").setJSON({SysMenuForm:rows[0]});\r\n");
      out.write("\t\tvar snode = $('#type_tree').tree('getSelected');\r\n");
      out.write("\t\t$('#SysMenuForm\\\\:punid').combotree('setValue',snode==null?'':snode.id);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#SysMenuDialog').dialog({\r\n");
      out.write("\t\t\ttitle:'修改菜单',\r\n");
      out.write("\t\t\tmodal:true,\r\n");
      out.write("\t\t\tbuttons:[{\r\n");
      out.write("\t\t\t\ttext:'确定',\r\n");
      out.write("\t\t\t\ticonCls:'icon-ok',\r\n");
      out.write("\t\t\t\thandler:SysMenuUpdate\r\n");
      out.write("\t\t\t},{\r\n");
      out.write("\t\t\t\ttext:'取消',\r\n");
      out.write("\t\t\t\thandler:function(){\r\n");
      out.write("\t\t\t\t\t$('#SysMenuDialog').dialog('close');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}],\r\n");
      out.write("\t\t\tclosed:false\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction SysMenuUpdate(){\r\n");
      out.write("\t\tvar obj=getFormObj();\r\n");
      out.write("\t\tif(!jQuery.form(\"#SysMenuForm\").validate())return;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tSysMenuAction.updateSysMenu(obj,function(result){\r\n");
      out.write("\t\t\tif(result.resultCode==\"0\"){\r\n");
      out.write("\t\t\t\t$('#SysMenuDialog').dialog('close');\r\n");
      out.write("\t\t\t\tvar queryObj=treeSelectCach==null?queryFormCach:treeSelectCach;\r\n");
      out.write("\t\t\t\tinitTypeTree(obj.punid);\r\n");
      out.write("\t\t\t\treLoadGridData(queryObj);\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tshowMsg(\"更新菜单时出错，可能原因为：\\n\"+result.resultMessage);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction SysMenuDel(){\r\n");
      out.write("\t\tvar rows = $('#SysMenuList').datagrid('getSelections');\r\n");
      out.write("\t\tif (rows.length<=0) {\r\n");
      out.write("\t\t\tshowMsg(\"请先选择需要删除的菜单!\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tconfirmMsg('确认需要删除这些菜单吗?', function(isdel){\r\n");
      out.write("\t\t\tif(isdel){\r\n");
      out.write("\t\t\t\tvar punid=rows[0].punid;\r\n");
      out.write("\t\t\t\tvar objs=new Array();\r\n");
      out.write("\t\t\t\tfor(var i=0;i<rows.length;i++){\r\n");
      out.write("\t\t\t\t\tobjs.push({unid:rows[i].unid});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tSysMenuAction.batchDeleteSysMenu(objs,function(result){\r\n");
      out.write("\t\t\t\t\tif(result.resultCode==\"0\"){\r\n");
      out.write("\t\t\t\t\t\tvar queryObj=treeSelectCach==null?queryFormCach:treeSelectCach;\r\n");
      out.write("\t\t\t\t\t\treLoadGridData(queryObj);\r\n");
      out.write("\t\t\t\t\t\tinitTypeTree(punid);\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\tshowMsg(\"删除菜单时出错，可能原因为：\\n\"+result.resultMessage);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("//--------------------界面操作 end ------------------------\r\n");
      out.write("\r\n");
      out.write("function initTypeTree(defId){\r\n");
      out.write("\t\t$('#type_tree').tree('reload');\r\n");
      out.write("\t\t$('#SysMenuForm\\\\:punid').combotree('tree').tree('reload');\r\n");
      out.write("\t\t$('#SysMenuForm\\\\:punid').combotree('tree').tree('append',{\r\n");
      out.write("\t\t\tparent:null,\r\n");
      out.write("\t\t\tdata:[{id:'',text:'系统',selected:true}]\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$('#type_tree').tree('append',{\r\n");
      out.write("\t\t\tparent:null,\r\n");
      out.write("\t\t\tdata:[{id:'',text:'系统',selected:true}]\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tSysMenuAction.getAllSysMenu(function(result){\r\n");
      out.write("\t\t\t//alert(showObj(result));\r\n");
      out.write("\t\t\tif(result.resultCode==\"0\"){\r\n");
      out.write("\t\t\t\tvar typeDatas=result.returnList;\r\n");
      out.write("\t\t\t\tfor(var i=0;i<typeDatas.length;i++){\r\n");
      out.write("\t\t\t\t\tif(typeDatas[i].punid==null || typeDatas[i].punid==\"\"){\r\n");
      out.write("\t\t\t\t\t\tvar newNode={\r\n");
      out.write("\t\t\t\t\t\t\t\t\tid:typeDatas[i].unid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttext:typeDatas[i].name\r\n");
      out.write("\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\tnodeAppend(null,newNode);\r\n");
      out.write("\t\t\t\t\t\tdataToTree(newNode,typeDatas);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t//选中默认节点：\r\n");
      out.write("\t\t\t\tif(defId!=null && defId!=\"null\" && defId!=\"\"){\r\n");
      out.write("\t\t\t\t\tvar defNode=$('#type_tree').tree('find',defId);\r\n");
      out.write("\t\t\t\t\tif(defNode!=null){\r\n");
      out.write("\t\t\t\t\t\t$('#type_tree').tree('select',defNode.target);\r\n");
      out.write("\t\t\t\t\t\t//重新加载数据\r\n");
      out.write("\t\t\t\t\t\t$('#SysMenuList').datagrid('unselectAll');\r\n");
      out.write("\t\t\t\t\t\tvar queryObj={\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstatus:$(\"#SysMenuQueryForm\\\\:status\").val(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\tpunid:defId\r\n");
      out.write("\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\ttreeSelectCach=queryObj;\r\n");
      out.write("\t\t\t\t\t\tqueryFormCach=null;\r\n");
      out.write("\t\t\t\t\t\treLoadGridData(queryObj);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tshowMsg(\"初始化树形时出错，可能原因为：\\n\"+result.resultMessage);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction dataToTree(root,result){\r\n");
      out.write("\t\tfor(var i=0;i<result.length;i++){\r\n");
      out.write("\t\t\tif(result[i].punid==root.id){\r\n");
      out.write("\t\t\t\tvar newNode={\r\n");
      out.write("\t\t\t\t\t\tid:result[i].unid,\r\n");
      out.write("\t\t\t\t\t\ttext:result[i].name\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\t\t\t\tnodeAppend(root,newNode);\r\n");
      out.write("\t\t\t\tdataToTree(newNode,result);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction nodeAppend(pnode,cnode){\r\n");
      out.write("\t\tpnode=(pnode==null?null:$('#type_tree').tree('find',pnode.id));\r\n");
      out.write("\t\t$('#type_tree').tree('append',{\r\n");
      out.write("\t\t\tparent:pnode==null?null:pnode.target,\r\n");
      out.write("\t\t\tdata:[cnode]\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar comboTreeNode=null;\r\n");
      out.write("\t\tif(pnode!=null){\r\n");
      out.write("\t\t\tcomboTreeNode=$('#SysMenuForm\\\\:punid').combotree('tree').tree('find',pnode.id);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$('#SysMenuForm\\\\:punid').combotree('tree').tree('append',{\r\n");
      out.write("\t\t\tparent:comboTreeNode==null?null:comboTreeNode.target,\r\n");
      out.write("\t\t\tdata:[cnode]\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

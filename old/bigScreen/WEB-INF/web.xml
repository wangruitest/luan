<?xml version="1.0" encoding="UTF-8"?>  
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns="http://java.sun.com/xml/ns/javaee"  
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"  
    version="3.0"> 
    
	<display-name>Archetype Created Web Application</display-name>
	
	<!-- Spring和mybatis的配置文件 -->
	<context-param>
	    <param-name>contextConfigLocation</param-name>
	    <param-value>classpath*:cfg/spring/*-context.xml</param-value>
    </context-param>

	<!-- 编码过滤器 -->  
    <filter>  
        <filter-name>encodingFilter</filter-name>  
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
        <async-supported>true</async-supported>  
        <init-param>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
    </filter>  
    <filter-mapping>  
        <filter-name>encodingFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>
	
	<filter>
		<filter-name>MenuFilter</filter-name>
		<filter-class>com.cmcc.zysoft.filter.MenuFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>MenuFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
<!-- 		<filter-mapping> -->
<!-- 		<filter-name>MenuFilter</filter-name> -->
<!-- 		<url-pattern>/index.html</url-pattern> -->
<!-- 	</filter-mapping> -->
	
	<!-- 检查用户是否登录了系统的过滤器配置  开始  -->
	<filter>
		<filter-name>SessionFilter</filter-name>
		<filter-class>com.cmcc.zysoft.filter.SessionFilter</filter-class>
		<init-param>
			<description>将当前登录的用户的信息保存在 session 中时使用的key，如果没有配置此参数，则该过滤器不起作用</description>
			<param-name>sessionKey</param-name>
			<param-value>user</param-value>
		</init-param>
		<init-param>
			<description>
		         如果用户未登录（即在 session 中 key 为 sessionKey 的属性不存在或为空），则将请求重定向到该 url。
		         该 url 不包含web应用的 ContextPath。
		         如果不配置此参数，则在用户未登录系统的情况下，直接重定向到web应用的根路径（/）
		     </description>
			<param-name>forwardUrl</param-name>
			<param-value>/login.jsp</param-value>
		</init-param>
		<init-param>
			<description>
         不需要进行拦截的 url 的正则表达式，即：如果当前请求的 url 的 servletPath 能匹配该正则表达式，则直接放行（即使未登录系统）。
         此参数的值一般为 loginServlet 和 registServlet 等。
         另外，参数 redirectUrl 的值不用包含在该正则表达式中，因为 redirectUrl 对应的 url 会被自动放行。
         还有一点需要说明的是，该参数的值不包含web应用的 ContextPath。
     </description>
			<param-name>excepUrlRegex</param-name>
			<!-- 不拦截 /servlets/loginServlet 和 /servlets/registServlet -->
<!-- 			<param-value>/servlets/(login|regist)Servlet</param-value> -->
			<param-value>/login.jsp</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>SessionFilter</filter-name>
		<url-pattern>/servlets/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SessionFilter</filter-name>
		<url-pattern>/jsp/*</url-pattern>
	</filter-mapping>
	
	<!-- Spring监听器 -->  
    <listener>  
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
    </listener>
    <!-- 防止Spring内存溢出监听器 -->  
    <listener>  
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  
    </listener>

	<!-- Spring MVC servlet -->  
    <servlet>  
        <servlet-name>rest</servlet-name>  
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
		    <param-name>contextClass</param-name>
		    <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
	    </init-param>
        <load-on-startup>1</load-on-startup>  
        <async-supported>true</async-supported>  
    </servlet>  
    <servlet-mapping>  
        <servlet-name>rest</servlet-name>  
        <url-pattern>*.html</url-pattern>  
    </servlet-mapping>
	
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<welcome-file-list>
		<welcome-file>login.jsp</welcome-file>
<!-- 		<welcome-file>normalLogin.jsp</welcome-file> -->
<!-- 		<welcome-file>index.jsp</welcome-file> -->
<!-- 		<welcome-file>index.htm</welcome-file> -->
<!-- 		<welcome-file>index.html</welcome-file> -->
	</welcome-file-list>

</web-app>
